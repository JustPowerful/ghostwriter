// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  firstname String
  lastname String
  email     String   @unique
  password String 
  workspaces Workspace[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Workspace {
  id String @id @default(cuid())
  title String
  
  receiverName String // main email receiver name
  email String // main email to send the updates

  userId String
  user User @relation(fields: [userId], references: [id])
  ccEmails String[] // CC emails for the workspace
  createAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
  tasks Tasks[]
}

model Tasks {
  id String @id @default(cuid())
  title String
  description String?
  
  status TaskStatus @default(TODO) // to store the status of the task
  doneAt DateTime? // to store the data when the task was completed

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
}


enum TaskStatus {
  TODO
  INPROGRESS
  DONE
  ARCHIVED // to store the task in the archive, this will not be shown in the main task list
}

